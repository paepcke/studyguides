This video covers database authorization. | 
As we'll see its a relatively straight forward topic, but it is a very important one. | 
Authorization has to do with first making sure that users only see the data that they're supposed to see. | 
And second, guarding the database from being modified by malicious users. | 
Now, one thing that we're not covering in this video are system or programming security issues, such as SQL injection errors, what we are focusing on is security of the data access itself. | 
So the way database authorization work is that users of the database have specific privileges, and then they can only operate on data for which they're authorized through those privileges. | 
So it's similar to file system, for example, privileges and authorization, except that it is specific to the database constructs, database contents, and tends to be more fine grained access than we see with file systems. | 
Specifically, for databases that privileges that are possible are on a particular relation to select the data for that relation or maybe just select the specific attributes, so that's read privileges. | 
As far as write privileges or modifications, we can set up the privilege to insert a non-relation or even insert specific attributesonly of a relation. | 
Most SQL implementations do allow you to insert data with only specific attributes specified. | 
We can have privileges to update a relation or update specific attributes, and finally the privilege to delete from a relation. | 
So let's go straight to some examples. | 
We'll be using the standard college admission sample database that we've used in other videos. | 
The schema is shown here at the bottom. | 
Let's suppose we have a user who wants to issue the update command shown. | 
They want to find students whose GPA is greater than 3.9, and if those students have applied anywhere, they want to update the application record and set the decision to be yes. | 
So, let's look at what privileges would be needed by the user to execute this command. | 
So, clearly, we're going to have to have some privileges on the Apply relation and some privileges on the Student relation. | 
In the Apply relation, they're going to need to be able to update the decision attribute, but there's no other update privileges that are needed. | 
In terms of select privileges or reading the Apply relation, the only attribute that's being read here is the student ID so, that's what they need.For the student relation, they're going to need to read the GPA, as well as the student ID, so the privilege needed there is the select privilege over the student ID and the GPA. | 
So with this set of privileges the user would be allowed to execute this operation. | 
In our next example, suppose the user wants to delete all students who haven't applied anywhere. | 
So they're deleting from the student relation where the student ID is not in the set of student IDs in the applied relation. | 
So, for this one again, they'll need privileges on the student relation and on the apply relation. | 
On the student relation, the user would need the delete privilege and delete never has attributes associated with it because you are always deleting entire tuples. | 
The only tuple that's actually, the only attribute that's actually being read from the student relation is the Student ID. | 
So, the user would also need the select privilege on Student ID. | 
And, then in the applied A relation, again only the student ID is being read. | 
So the user would need the select privilege on apply of the student ID. | 
And with these the user will be permitted to execute this operation. | 
