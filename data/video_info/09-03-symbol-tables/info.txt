00:00:00
slide
Compilers 1 Symbol Tables
00:00:15
slide
Symbol Tables Much of semantic analysis can be expressed as a recursive descent of an AST Before Process an AST node n Recurse Process the children of n After Finish processing the AST node n When performing semantic analysis on a portion of the the AST we need to know which identifiers are defined
00:00:35
writing

00:02:20
slide
Symbol Tables Example the scope of let bindings is one subtree of the AST let x lnt e x is defined in subtree e ex Aiken
00:02:30
writing

00:04:10
slide
Symbol Tables Recall let x Int O in e Idea Before processing e add definition of x to current definitions overriding any other definition of x Recurse After processing e remove definition ofx and restore old definition of x A symbol table is a data structure that tracks the current bindings of identifiers Alex mm
00:04:20
writing

00:04:55
slide
Symbol Tables For a simple symbol table we can use a stack Operations add symbol x push x and associated info such as type on the stack find symbol x search stack starting from top for x Return first x found or NULL if none found remove symbol pop the stack Alex mm
00:05:00
slide
Symbol Tables For a simple symbol table we can use a stack Operations add symbol x push x and associated info such as type on the stack find symbol x search stack starting from top for x Return first x found or NULL if none found remove symbo pop the stack Alex mm
00:05:05
writing

00:06:25
slide
Symbol Tables The simple symbol table works for let Symbols added one at a time Declarations are perfectly nested Alex mm
00:06:30
writing

00:08:20
slide
Symbol Tables enter scope start a new nested scope find symbol x finds current x or null add symbol x add a symbol x to the table check scope x true if x defined in current scope exit scope exit current scope A symbol table manageris supplied with the project
00:08:25
writing

00:10:20
slide
Symbol Tables Class names can be used before being defined We check class names using a symbol table or even in one pass Solution Pass 1 Gather all class names Pass 2 Do the checking Semantic analysis requires multiple passes Probably more than two Alex mm
00:10:25
writing

