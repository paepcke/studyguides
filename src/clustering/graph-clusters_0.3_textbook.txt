Set(['parse_tree', 'root'])
Set(['programming_language', 'state', 'sentence'])
Set(['compile_time', 'array', 'declaration'])
Set(['method', 'syntax'])
Set(['prefix', 'memory'])
Set(['stack_pointer', 'pointer'])
Set(['expression', 'machine_language'])
Set(['static_checking'])
Set(['follow', 'memory', 'attribute'])
Set(['parse_tree', 'syntax_tree'])
Set(['body', 'call', 'pointer'])
Set(['allocation', 'coloring', 'execution_path', 'block_structure'])
Set(['domain', 'regular_expression'])
Set(['graph_coloring', 'location', 'graph', 'register', 'architecture'])
Set(['valid_item', 'automaton', 'grammar'])
Set(['cache', 'loop'])
Set(['environment', 'class', 'actual_parameter'])
Set(['parser_state', 'configuration'])
Set(['intermediate_code', 'location'])
Set(['predecessor', 'constant_propagation'])
Set(['predicate', 'parse_tree'])
Set(['compile_time', 'handle', 'heap'])
Set(['leftmost_derivation', 'nonterminal'])
Set(['load_instruction'])
Set(['rightmost_derivation', 'reduction'])
Set(['object_program', 'language'])
Set(['language', 'static_scope'])
Set(['global_code_optimization'])
Set(['return', 'grammar'])
Set(['parameter', 'reference', 'address'])
Set(['analysis', 'top_element'])
Set(['identifier', 'method', 'branch'])
Set(['item', 'reduce_reduce_conflict'])
Set(['token', 'stack'])
Set(['reference_count', 'memory'])
Set(['dynamic_programming'])
Set(['procedure_parameter'])
Set(['domain', 'address'])
Set(['terminal', 'call_string', 'tree', 'nonterminal'])
Set(['object_code', 'code_generation'])
Set(['start_state', 'viable_prefix'])
Set(['keyword', 'reference', 'pass', 'string'])
Set(['control_flow', 'return', 'procedure', 'flow_graph'])
Set(['semantic_error'])
Set(['method_call', 'function_call', 'language'])
Set(['jump'])
Set(['first_generation_language'])
Set(['shift_reduce_parser'])
Set(['follow', 'symbol_table'])
Set(['intermediate_code', 'dead_state', 'dead_code'])
Set(['procedure_call', 'return'])
Set(['final_state', 'start_state'])
Set(['semantic_rule', 'call'])
Set(['root', 'space'])
Set(['increment_instruction'])
Set(['function', 'activation_record'])
Set(['graph', 'label'])
Set(['address_space', 'return'])
Set(['token', 'continue_statement'])
Set(['graph', 'initialization'])
Set(['root_set', 'root', 'follow'])
Set(['static_allocation'])
Set(['state', 'free_state'])
Set(['deterministic_finite_automaton', 'finite_automaton', 'automaton'])
Set(['data_space', 'space'])
Set(['programming_language', 'context_free_grammar', 'string', 'context_free_language'])
Set(['activation_tree', 'tree'])
Set(['derivation', 'structure'])
Set(['empty_string', 'rule', 'class'])
Set(['transition'])
Set(['white_space', 'expression'])
Set(['body', 'call', 'block', 'address'])
Set(['stack_machine', 'first'])
Set(['syntax_error'])
Set(['start_symbol', 'language'])
Set(['transition_function'])
Set(['path', 'execution_path', 'coloring', 'call_graph'])
Set(['table', 'method'])
Set(['intermediate_code', 'local_code_optimization'])
Set(['store_instruction'])
Set(['unreachable_code'])
Set(['union', 'regular_expression'])
Set(['code_optimization', 'compile_time', 'first', 'code_generation'])
Set(['pointer_analysis'])
Set(['reduction', 'left_side', 'conflict'])
Set(['compile_time', 'left_side', 'production', 'structure'])
Set(['grammar_symbol', 'parser'])
Set(['scope', 'attribute'])
Set(['register_pair'])
Set(['prefix', 'prefix_expression', 'type_expression', 'type'])
Set(['recursive_type'])
Set(['function', 'token'])
Set(['semantic_analysis', 'first'])
Set(['type_checking', 'statement'])
Set(['left_side', 'execution_path', 'structure'])
Set(['attribute_grammar'])
Set(['syntax_analysis'])
Set(['child'])
Set(['lexical_scope'])
Set(['field_store'])
Set(['semantics', 'address'])
Set(['data_flow_analysis', 'multiple_data'])
Set(['string', 'character_class'])
Set(['calling_sequence'])
Set(['abstract_syntax_tree', 'structure'])
Set(['function_type', 'call'])
Set(['shift_reduce_conflict'])
Set(['record', 'stack'])
Set(['constant', 'graph', 'optimization', 'call', 'data_flow_analysis', 'block'])
Set(['transition_table'])
Set(['node', 'compile_time', 'edge', 'loop'])
Set(['register', 'stack'])
Set(['constant_propagation', 'constant', 'block'])
Set(['block', 'register_assignment'])
Set(['graph', 'optimization', 'analysis', 'basic_block'])
Set(['garbage_collection', 'location'])
Set(['parser', 'analysis'])
Set(['field_load'])
Set(['floating_garbage'])
Set(['automaton', 'accepting_state'])
Set(['register_allocation', 'analysis'])
Set(['alphabet', 'language'])
Set(['field', 'attribute'])
Set(['copy_statement'])
Set(['assembly_language', 'rule'])
Set(['dynamic_scope'])
Set(['bottom_element', 'loop'])
Set(['signature'])
Set(['parser', 'error_production'])
Set(['phase', 'compile_time'])
Set(['free_list', 'phase'])
Set(['formal_parameter'])
Set(['entry_node', 'return'])
Set(['lexical_error'])
Set(['basic_type'])
Set(['copy_propagation'])
Set(['cache_interference'])
Set(['terminal', 'call_string', 'call_graph'])
