Set(['parse_tree', 'first'])
Set(['programming_language', 'reference', 'left_side', 'white_space'])
Set(['first', 'sentence'])
Set(['keyword', 'reference', 'left_side', 'call_string', 'declaration', 'array'])
Set(['body', 'syntax'])
Set(['prefix', 'structure'])
Set(['stack_pointer', 'call'])
Set(['machine_language', 'code_generation'])
Set(['scope', 'static_checking'])
Set(['free_list', 'follow', 'root_set'])
Set(['parse_tree', 'syntax_tree'])
Set(['grammar_symbol', 'pointer', 'grammar'])
Set(['node', 'coloring', 'code_generation', 'control_flow', 'location', 'path', 'execution_path', 'first'])
Set(['domain', 'regular_expression', 'address'])
Set(['graph', 'reference', 'compile_time'])
Set(['valid_item', 'automaton', 'first', 'memory'])
Set(['cache', 'register'])
Set(['state', 'transition'])
Set(['environment', 'call', 'actual_parameter'])
Set(['parser_state', 'start_state', 'configuration'])
Set(['predecessor', 'rule', 'viable_prefix'])
Set(['predicate', 'parse_tree'])
Set(['handle', 'type_checking'])
Set(['start_symbol', 'leftmost_derivation', 'derivation'])
Set(['load_instruction', 'first'])
Set(['rightmost_derivation', 'call_string', 'nonterminal'])
Set(['object_program', 'method'])
Set(['call', 'static_scope'])
Set(['global_code_optimization'])
Set(['grammar', 'statement', 'free_state'])
Set(['environment', 'parameter', 'type', 'call'])
Set(['first', 'top_element'])
Set(['field', 'string', 'method_call', 'method'])
Set(['item', 'stack', 'final_state'])
Set(['start_symbol', 'terminal', 'token', 'context_free_grammar', 'context_free_language'])
Set(['architecture', 'data_flow_analysis', 'loop'])
Set(['reference_count', 'call'])
Set(['dynamic_programming', 'type'])
Set(['function', 'identifier', 'call', 'space'])
Set(['procedure_parameter'])
Set(['object_code', 'memory'])
Set(['start_state', 'flow_graph'])
Set(['semantic_error', 'lexical_error', 'semantic_analysis'])
Set(['reference', 'function_call'])
Set(['jump', 'first'])
Set(['first_generation_language'])
Set(['shift_reduce_parser'])
Set(['call', 'symbol_table'])
Set(['dead_code', 'dead_state', 'first'])
Set(['language', 'pass', 'space', 'activation_record'])
Set(['procedure_call', 'graph'])
Set(['final_state', 'block_structure'])
Set(['semantic_rule', 'lexical_scope', 'scope'])
Set(['increment_instruction'])
Set(['table', 'label', 'basic_block', 'first'])
Set(['record', 'address_space', 'first'])
Set(['continue_statement', 'call'])
Set(['initialization', 'branch', 'basic_block'])
Set(['body', 'function', 'activation_record', 'address'])
Set(['static_allocation'])
Set(['function', 'language', 'space', 'activation_record', 'address'])
Set(['deterministic_finite_automaton', 'automaton'])
Set(['data_space', 'location'])
Set(['activation_tree', 'return'])
Set(['compile_time', 'graph_coloring', 'graph'])
Set(['empty_string', 'rule'])
Set(['edge', 'procedure', 'basic_block'])
Set(['intermediate_code', 'register_allocation'])
Set(['reduce_reduce_conflict', 'shift_reduce_conflict'])
Set(['rule', 'viable_prefix', 'automaton', 'conflict', 'first'])
Set(['semantic_rule', 'call', 'expression', 'semantics'])
Set(['free_list', 'block'])
Set(['syntax_error', 'method'])
Set(['transition_function'])
Set(['intermediate_code', 'local_code_optimization'])
Set(['store_instruction'])
Set(['unreachable_code'])
Set(['union', 'regular_expression'])
Set(['register', 'stack_machine'])
Set(['pointer_analysis'])
Set(['reduction', 'start_symbol', 'derivation'])
Set(['predecessor', 'production', 'viable_prefix'])
Set(['register_pair'])
Set(['root', 'type'])
Set(['recursive_type'])
Set(['attribute_grammar'])
Set(['syntax_analysis'])
Set(['compile_time', 'heap'])
Set(['child'])
Set(['field_store'])
Set(['type', 'prefix_expression'])
Set(['analysis', 'multiple_data'])
Set(['string', 'character_class'])
Set(['calling_sequence'])
Set(['abstract_syntax_tree', 'parser'])
Set(['node', 'tree', 'code_generation'])
Set(['function_type', 'identifier', 'call', 'rule'])
Set(['graph', 'optimization', 'compile_time'])
Set(['transition_table'])
Set(['constant_propagation', 'constant', 'basic_block'])
Set(['register_allocation', 'register_assignment', 'statement'])
Set(['allocation', 'execution_path', 'first', 'basic_block'])
Set(['code_optimization', 'structure'])
Set(['attribute', 'identifier', 'call', 'first'])
Set(['garbage_collection', 'pointer'])
Set(['field_load'])
Set(['floating_garbage'])
Set(['automaton', 'accepting_state'])
Set(['grammar', 'type_expression'])
Set(['alphabet', 'language'])
Set(['copy_statement'])
Set(['code_optimization', 'assembly_language'])
Set(['dynamic_scope'])
Set(['bottom_element', 'constant'])
Set(['signature'])
Set(['call', 'error_production'])
Set(['phase', 'semantic_analysis'])
Set(['finite_automaton', 'array'])
Set(['class', 'function_call'])
Set(['execution_path', 'first', 'structure', 'call_graph'])
Set(['formal_parameter'])
Set(['entry_node', 'graph'])
Set(['basic_type', 'type'])
Set(['copy_propagation'])
Set(['cache_interference'])
