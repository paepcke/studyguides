Set(['parse_tree', 'first'])
Set(['programming_language', 'function', 'compile_time'])
Set(['semantic_rule', 'first', 'sentence'])
Set(['keyword', 'reference', 'space', 'syntax', 'token', 'syntax_analysis', 'declaration', 'array', 'white_space', 'string'])
Set(['prefix', 'reduce_reduce_conflict', 'automaton', 'first'])
Set(['stack_pointer', 'pointer', 'function_call'])
Set(['machine_language', 'code_generation'])
Set(['static_scope', 'call', 'static_checking', 'first'])
Set(['function', 'follow', 'symbol_table'])
Set(['abstract_syntax_tree', 'tree', 'syntax_tree', 'code_generation'])
Set(['register_assignment', 'basic_block', 'left_side', 'allocation', 'dead_state', 'path', 'register_allocation', 'flow_graph', 'coloring', 'multiple_data', 'register', 'block_structure', 'architecture', 'dead_code', 'intermediate_code', 'execution_path', 'call_graph'])
Set(['domain', 'regular_expression', 'address'])
Set(['function', 'compile_time', 'graph', 'loop'])
Set(['item', 'viable_prefix', 'final_state', 'valid_item', 'stack'])
Set(['cache', 'register'])
Set(['state', 'conflict', 'shift_reduce_conflict'])
Set(['function_call', 'environment', 'location', 'actual_parameter', 'table', 'parameter'])
Set(['parser_state', 'stack', 'configuration', 'start_state'])
Set(['compile_time', 'location', 'rule', 'function_call'])
Set(['predecessor', 'viable_prefix'])
Set(['predicate', 'parse_tree'])
Set(['return', 'function_type', 'handle'])
Set(['rightmost_derivation', 'start_symbol', 'leftmost_derivation'])
Set(['load_instruction', 'register'])
Set(['body', 'object_program', 'root'])
Set(['global_code_optimization'])
Set(['semantic_analysis', 'type_checking', 'language', 'call', 'grammar', 'type'])
Set(['bottom_element', 'top_element', 'first'])
Set(['register', 'method', 'activation_record'])
Set(['reference_count', 'call'])
Set(['dynamic_programming', 'call'])
Set(['semantic_rule', 'identifier', 'class', 'first'])
Set(['procedure_parameter'])
Set(['method_call', 'attribute', 'call_string', 'field', 'object_program'])
Set(['object_code', 'method', 'memory'])
Set(['node', 'start_state', 'entry_node', 'terminal', 'control_flow', 'edge', 'procedure_call', 'block'])
Set(['call', 'semantic_error', 'lexical_error', 'first'])
Set(['jump', 'register'])
Set(['first_generation_language'])
Set(['shift_reduce_parser'])
Set(['procedure', 'pass'])
Set(['final_state', 'data_flow_analysis', 'code_generation'])
Set(['increment_instruction'])
Set(['register', 'label'])
Set(['function', 'address_space'])
Set(['continue_statement', 'function_call'])
Set(['initialization', 'method'])
Set(['free_list', 'root_set', 'pointer'])
Set(['static_allocation'])
Set(['type', 'type_expression', 'free_state'])
Set(['body', 'object_program', 'address'])
Set(['deterministic_finite_automaton', 'array', 'finite_automaton'])
Set(['allocation', 'data_space'])
Set(['expression', 'analysis', 'context_free_language'])
Set(['activation_tree', 'procedure_call'])
Set(['graph_coloring', 'procedure_call', 'control_flow', 'block'])
Set(['parser', 'derivation', 'syntax'])
Set(['function', 'transition_function', 'transition_table', 'transition'])
Set(['empty_string', 'rule'])
Set(['optimization', 'procedure', 'structure'])
Set(['syntax_error', 'class'])
Set(['function', 'follow', 'start_symbol'])
Set(['local_code_optimization', 'optimization'])
Set(['store_instruction'])
Set(['unreachable_code'])
Set(['union', 'regular_expression'])
Set(['left_side', 'stack_machine'])
Set(['pointer_analysis'])
Set(['rightmost_derivation', 'reduction', 'start_symbol'])
Set(['call', 'production', 'context_free_grammar'])
Set(['function', 'start_symbol', 'nonterminal'])
Set(['grammar_symbol', 'function', 'start_symbol'])
Set(['semantic_analysis', 'language', 'call', 'scope'])
Set(['register_pair'])
Set(['recursive_type'])
Set(['call', 'context_free_grammar', 'statement'])
Set(['attribute_grammar'])
Set(['stack', 'heap'])
Set(['child'])
Set(['lexical_scope', 'lexical_error', 'call'])
Set(['field_store'])
Set(['function', 'programming_language', 'semantics'])
Set(['type', 'prefix_expression'])
Set(['string', 'character_class'])
Set(['calling_sequence'])
Set(['procedure_call', 'record'])
Set(['semantic_rule', 'constant', 'class', 'first'])
Set(['semantic_analysis', 'language', 'code_optimization', 'call'])
Set(['garbage_collection', 'object_program'])
Set(['declaration', 'parser', 'syntax'])
Set(['field_load'])
Set(['floating_garbage'])
Set(['automaton', 'accepting_state'])
Set(['constant_propagation', 'basic_block'])
Set(['alphabet', 'language'])
Set(['function', 'follow', 'branch'])
Set(['copy_statement'])
Set(['compile_time', 'rule', 'assembly_language', 'function_call'])
Set(['dynamic_scope'])
Set(['signature'])
Set(['error_production', 'method'])
Set(['phase', 'analysis', 'context_free_language'])
Set(['formal_parameter'])
Set(['basic_type', 'type'])
Set(['copy_propagation'])
Set(['cache_interference'])
