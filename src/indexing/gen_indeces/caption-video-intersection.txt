1950s
abstract syntax tree
accumulator
activation record
actual
adding
address
allocate
allocated
allocation
allows
alphabet
analysis parsing
analysis parsing semantic
applied
appropriate
area
argument
array
assembly code
assume
basic
basic block
better
binding
body
boolean
bottom parsing
callee
catch
class inherits
class method
close
colon
coloring
common
compilation
compile time
complex
computed
configuration
context free grammar
continue
control flow graph
current
dead
declaration
default
defined
definition
descent algorithm
describing
detail
dfa state
directly
dispatch
easy
edge
element
entire
equal
equivalent
error
evaluating
evaluation
execution
fact
false
faster
field
find
finite automaton
first set
foo
fortran
frame pointer
function definition
goal
graph coloring
hard
heuristic
hold
human
identifier
implementation
implemented
implementing
includes
including
inheritance
initialization
initialize
integer
introduce
introduction
issue
key
keyword
label
layout
lead
leaf
lexical analysis
lexical analysis parsing
lexical analysis parsing semantic
lexical specification
limitation
ll1
local optimization
logical
lot
magic
meaning
modern
needed
neighbor
nested
nice
node
notation
note
open
operation
original
parameter
parse tree
parsing semantic
parsing table
path
perform
phase
pick
picture
pointer point
practice
predecessor
problem
procedure
push
range
recall
recognizing viable prefix
recursive descent algorithm
reduction
regular
regular expression
regular language
repeat
replace
requires
rest
result
return address
return type
rewrite
rightmost derivation
role
root
rule type
save
scan
scope
selftype
sense
sentence
sequence
set string
sigma
single
size
small
solution
special
stack machine
standard
starting
statically
string start symbol
substring
system
talked
target
template
terminal
terminates
top stack
topic
transition
tree
true
type object
type rule
type system
typed
union
unreachable
usual
variable reference
version
void
wan
word
written
